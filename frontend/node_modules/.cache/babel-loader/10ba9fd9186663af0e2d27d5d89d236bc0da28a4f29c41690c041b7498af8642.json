{"ast":null,"code":"import axios from 'axios';\n\n// Usar la variable de entorno o un valor por defecto\nexport const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Configurar interceptor global para el token\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Helper function to build API endpoints\nexport const endpoints = {\n  auth: {\n    login: `${API_URL}/auth/login`,\n    register: `${API_URL}/auth/register`,\n    me: `${API_URL}/auth/me`\n  },\n  appointments: {\n    list: `${API_URL}/appointments`,\n    create: `${API_URL}/appointments`,\n    available: (doctorId, date) => `${API_URL}/appointments/available-slots?doctorId=${doctorId}&date=${date}`,\n    updateStatus: id => `${API_URL}/appointments/${id}/status`\n  },\n  doctors: {\n    list: `${API_URL}/doctors`,\n    get: id => `${API_URL}/doctors/${id}`\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","endpoints","auth","login","register","me","appointments","list","create","available","doctorId","date","updateStatus","id","doctors","get"],"sources":["C:/Users/Paco/OneDrive/Escritorio/DesWeb/Proyecto/frontend/src/config/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Usar la variable de entorno o un valor por defecto\nexport const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Configurar interceptor global para el token\naxios.interceptors.request.use(\n    config => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    error => {\n        return Promise.reject(error);\n    }\n);\n\n// Helper function to build API endpoints\nexport const endpoints = {\n    auth: {\n        login: `${API_URL}/auth/login`,\n        register: `${API_URL}/auth/register`,\n        me: `${API_URL}/auth/me`\n    },\n    appointments: {\n        list: `${API_URL}/appointments`,\n        create: `${API_URL}/appointments`,\n        available: (doctorId, date) => `${API_URL}/appointments/available-slots?doctorId=${doctorId}&date=${date}`,\n        updateStatus: (id) => `${API_URL}/appointments/${id}/status`\n    },\n    doctors: {\n        list: `${API_URL}/doctors`,\n        get: (id) => `${API_URL}/doctors/${id}`\n    }\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAEnF;AACAJ,KAAK,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BC,MAAM,IAAI;EACN,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,EACDM,KAAK,IAAI;EACL,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACA,OAAO,MAAMG,SAAS,GAAG;EACrBC,IAAI,EAAE;IACFC,KAAK,EAAE,GAAGlB,OAAO,aAAa;IAC9BmB,QAAQ,EAAE,GAAGnB,OAAO,gBAAgB;IACpCoB,EAAE,EAAE,GAAGpB,OAAO;EAClB,CAAC;EACDqB,YAAY,EAAE;IACVC,IAAI,EAAE,GAAGtB,OAAO,eAAe;IAC/BuB,MAAM,EAAE,GAAGvB,OAAO,eAAe;IACjCwB,SAAS,EAAEA,CAACC,QAAQ,EAAEC,IAAI,KAAK,GAAG1B,OAAO,0CAA0CyB,QAAQ,SAASC,IAAI,EAAE;IAC1GC,YAAY,EAAGC,EAAE,IAAK,GAAG5B,OAAO,iBAAiB4B,EAAE;EACvD,CAAC;EACDC,OAAO,EAAE;IACLP,IAAI,EAAE,GAAGtB,OAAO,UAAU;IAC1B8B,GAAG,EAAGF,EAAE,IAAK,GAAG5B,OAAO,YAAY4B,EAAE;EACzC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}